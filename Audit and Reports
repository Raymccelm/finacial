<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Audit & Reports</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <style>
        body { font-family: 'Inter', sans-serif; }
    </style>
</head>
<body class="bg-gray-100 text-gray-800">

    <div class="container mx-auto p-4 md:p-6">
        <header class="text-center mb-6">
            <h1 class="text-3xl font-bold text-gray-900">Audit & Reports</h1>
            <p class="text-lg text-gray-600 mt-2">Keep your plan in sync with reality and review your history.</p>
        </header>

        <div class="grid grid-cols-1 lg:grid-cols-2 gap-6">
            <!-- Account Audit Column -->
            <div class="bg-white p-5 rounded-lg shadow-lg">
                <h2 class="text-xl font-bold mb-3 border-b pb-2">Weekly Account Audit</h2>
                <p class="text-sm text-gray-600 mb-4">Enter your real bank balances to ensure everything matches. The 'Calculated' balance will update as you use the full app.</p>
                <div id="audit-container" class="space-y-4"></div>
            </div>

            <!-- Financial Report Column -->
            <div class="bg-white p-5 rounded-lg shadow-lg">
                <h2 class="text-xl font-bold mb-3 border-b pb-2">Financial Report</h2>
                <div id="report-container" class="overflow-y-auto max-h-[600px] border rounded-md">
                    <table class="min-w-full text-sm">
                        <thead class="bg-gray-200 sticky top-0">
                            <tr>
                                <th class="py-2 px-3 text-left text-xs font-semibold text-gray-600">Date</th>
                                <th class="py-2 px-3 text-left text-xs font-semibold text-gray-600">Type</th>
                                <th class="py-2 px-3 text-left text-xs font-semibold text-gray-600">Details</th>
                                <th class="py-2 px-3 text-right text-xs font-semibold text-gray-600">Amount</th>
                            </tr>
                        </thead>
                        <tbody id="report-body"></tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

    <script>
    document.addEventListener('DOMContentLoaded', () => {
        // --- DOM Elements ---
        const auditContainerEl = document.getElementById('audit-container');
        const reportBodyEl = document.getElementById('report-body');

        let appState = {};

        // --- Initial Data (The 'Database') ---
        const initialState = {
            // Personal accounts removed from audit list
            accounts: [
                { id: 'acc1', name: 'Account 1 (Income)', calculatedBalance: 1250.75 },
                { id: 'acc2', name: 'Account 2 (Bills)', calculatedBalance: 1813.44 },
                { id: 'acc3', name: 'Account 3 (Savings)', calculatedBalance: 6500.00 }
            ],
            transactions: [
                { date: '25/06/2025', type: 'Income', details: 'Raymond Pay', amount: 1418.92 },
                { date: '24/06/2025', type: 'Rollover', details: 'Food week-end', amount: 25.50 },
                { date: '24/06/2025', type: 'Withdrawal', details: 'Gifts Fund: John\'s Birthday', amount: -200.00 },
                { date: '20/06/2025', type: 'Income', details: 'Leslie Pay', amount: 1812.00 },
                { date: '20/06/2025', type: 'Income', details: 'Side Hustle', amount: 500.00 },
                { date: '18/06/2025', type: 'Weekly Summary', details: 'Income vs Budget', amount: 74.05 },
            ],
        };

        // --- State Management ---
        function saveState() {
            localStorage.setItem('auditAndReportsState_v1.1', JSON.stringify(appState));
        }

        function loadState() {
            const savedState = localStorage.getItem('auditAndReportsState_v1.1');
            appState = savedState ? JSON.parse(savedState) : JSON.parse(JSON.stringify(initialState));
        }

        // --- Main Render Function ---
        function render() {
            renderAudit();
            renderReport();
        }

        function renderAudit() {
            let html = '';
            appState.accounts.forEach(acc => {
                const actualBalance = parseFloat(localStorage.getItem(`actualBalance_${acc.id}`)) || '';
                let difference = 0;
                let diffClass = 'text-gray-400';
                if(actualBalance !== '') {
                    difference = actualBalance - acc.calculatedBalance;
                     if(Math.abs(difference) > 0.01) {
                        diffClass = 'text-red-500 font-bold';
                    } else {
                        diffClass = 'text-green-500 font-bold';
                    }
                }
                
                html += `
                <div class="p-3 border rounded-lg">
                    <p class="font-bold text-gray-800">${acc.name}</p>
                    <div class="grid grid-cols-3 gap-4 mt-2 text-sm items-center">
                        <div>
                            <label class="text-xs text-gray-500 block">Calculated</label>
                            <span class="font-semibold">$${acc.calculatedBalance.toFixed(2)}</span>
                        </div>
                        <div>
                            <label class="text-xs text-gray-500 block">Actual</label>
                            <input type="number" step="0.01" class="w-full p-1 border rounded text-right" data-id="${acc.id}" value="${actualBalance}">
                        </div>
                         <div>
                            <label class="text-xs text-gray-500 block">Difference</label>
                            <span class="font-semibold ${diffClass}" id="diff-${acc.id}">$${difference.toFixed(2)}</span>
                        </div>
                    </div>
                </div>`;
            });
            auditContainerEl.innerHTML = html;
        }

        function renderReport() {
            let html = '';
            appState.transactions.forEach(tx => {
                const isIncome = tx.amount >= 0;
                html += `
                <tr class="border-b border-gray-200">
                    <td class="py-3 px-3 whitespace-nowrap">${tx.date}</td>
                    <td class="py-3 px-3">
                        <span class="px-2 py-1 text-xs rounded-full font-medium ${isIncome ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'}">
                            ${tx.type}
                        </span>
                    </td>
                    <td class="py-3 px-3 text-gray-600">${tx.details}</td>
                    <td class="py-3 px-3 text-right font-semibold ${isIncome ? 'text-green-600' : 'text-red-600'}">
                        ${isIncome ? '+' : '-'}$${Math.abs(tx.amount).toFixed(2)}
                    </td>
                </tr>`;
            });
            reportBodyEl.innerHTML = html;
        }


        // --- Event Handlers ---
        auditContainerEl.addEventListener('input', e => {
            if (e.target.matches('input[data-id]')) {
                const accId = e.target.dataset.id;
                const actualValue = e.target.value;

                // Save actual balance to local storage immediately
                if (actualValue) {
                    localStorage.setItem(`actualBalance_${accId}`, actualValue);
                } else {
                    localStorage.removeItem(`actualBalance_${accId}`);
                }

                // Recalculate and display difference
                const account = appState.accounts.find(a => a.id === accId);
                const difference = parseFloat(actualValue || 0) - account.calculatedBalance;
                const diffEl = document.getElementById(`diff-${accId}`);
                diffEl.textContent = `$${difference.toFixed(2)}`;

                if(Math.abs(difference) > 0.01) {
                    diffEl.className = 'font-semibold text-red-500';
                } else {
                    diffEl.className = 'font-semibold text-green-500';
                }
            }
        });

        // --- Initial Load ---
        loadState();
        render();
    });
    </script>
</body>
</html>
