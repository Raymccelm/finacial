<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Budget & Bills Management</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <style>
        body { font-family: 'Inter', sans-serif; }
        .modal-overlay {
            position: fixed; top: 0; left: 0; right: 0; bottom: 0;
            background-color: rgba(0, 0, 0, 0.5);
            display: none; align-items: center; justify-content: center;
            z-index: 50;
        }
        .modal-overlay.active { display: flex; }
    </style>
</head>
<body class="bg-gray-100 text-gray-800">

    <div class="container mx-auto p-4 md:p-6">
        <header class="text-center mb-6">
            <h1 class="text-3xl font-bold text-gray-900">Budget & Bills Management</h1>
            <p class="text-lg text-gray-600 mt-2">Your financial control panel. Click 'Edit' to make changes.</p>
        </header>

        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
            <!-- Recurring Bills Column -->
            <div class="bg-white p-5 rounded-lg shadow-lg">
                <div class="flex justify-between items-center mb-4">
                    <h2 class="text-xl font-bold">Recurring Bills & Subscriptions</h2>
                    <button class="text-sm bg-blue-500 text-white px-3 py-1 rounded-full hover:bg-blue-600" onclick="alert('Add New Bill functionality would go here.')">Add New</button>
                </div>
                <div id="bills-container" class="space-y-2"></div>
            </div>

            <!-- Sinking Funds Column -->
            <div class="bg-white p-5 rounded-lg shadow-lg">
                <div class="flex justify-between items-center mb-4">
                    <h2 class="text-xl font-bold">Sinking Funds (Goals & Annual)</h2>
                     <button class="text-sm bg-blue-500 text-white px-3 py-1 rounded-full hover:bg-blue-600" onclick="alert('Add New Fund functionality would go here.')">Add New</button>
                </div>
                <div id="sinking-funds-container" class="space-y-2"></div>
            </div>
        </div>
    </div>
    
    <!-- Edit Item Modal -->
    <div id="edit-item-modal" class="modal-overlay">
        <div class="bg-white p-6 rounded-lg shadow-xl w-full max-w-md m-4">
            <h3 id="edit-item-title" class="text-lg font-bold mb-4">Edit Item</h3>
            <form id="edit-item-form" class="space-y-4">
                <input type="hidden" id="edit-item-id">
                <input type="hidden" id="edit-item-type">
                <div>
                    <label for="edit-item-name" class="block text-sm font-medium">Name / Category</label>
                    <input type="text" id="edit-item-name" class="w-full p-2 border rounded mt-1" required>
                </div>
                 <div>
                    <label for="edit-item-provider" class="block text-sm font-medium">Provider / To</label>
                    <input type="text" id="edit-item-provider" class="w-full p-2 border rounded mt-1">
                </div>
                <div>
                    <label for="edit-item-amount" class="block text-sm font-medium">Weekly Amount ($)</label>
                    <input type="number" id="edit-item-amount" step="0.01" class="w-full p-2 border rounded mt-1" required>
                </div>
                <div id="edit-contract-status" class="hidden">
                     <label for="edit-item-contract" class="block text-sm font-medium">Contract Status</label>
                     <select id="edit-item-contract" class="w-full p-2 border rounded mt-1">
                        <option value="Cancellable Anytime">Cancellable Anytime</option>
                        <option value="In Contract">In Contract</option>
                     </select>
                </div>
                <div class="flex justify-end space-x-3 pt-4">
                    <button type="button" class="bg-red-500 text-white px-4 py-2 rounded" id="delete-item-button">Delete</button>
                    <button type="button" class="bg-gray-300 px-4 py-2 rounded" id="edit-item-cancel">Cancel</button>
                    <button type="submit" class="bg-blue-600 text-white px-4 py-2 rounded">Save Changes</button>
                </div>
            </form>
        </div>
    </div>

    <script>
    document.addEventListener('DOMContentLoaded', () => {
        // --- DOM Elements ---
        const billsContainerEl = document.getElementById('bills-container');
        const sinkingFundsContainerEl = document.getElementById('sinking-funds-container');
        const modalEl = document.getElementById('edit-item-modal');
        const modalFormEl = document.getElementById('edit-item-form');
        const modalCancelEl = document.getElementById('edit-item-cancel');
        const deleteButtonEl = document.getElementById('delete-item-button');
        
        let appState = {};

        // --- Initial Data (The 'Database') ---
        const initialState = {
            bills: [
                { id: 'b1', name: 'Rent', provider: 'Real Estate', amount: 600.00 },
                { id: 'b2', name: 'Electricity', provider: 'Origin Energy', amount: 85.50 },
                { id: 'b3', name: 'Internet', provider: 'Telstra', amount: 27.75 },
                { id: 'b4', name: 'Car Loan', provider: 'NAB', amount: 194.96 },
                { id: 'b5', name: 'Trailer Loan', provider: 'Finance Co.', amount: 259.42 },
                { id: 'b6', name: 'PayTV', provider: 'Foxtel', amount: 6.50, contract: 'Cancellable Anytime' },
                { id: 'b7', name: 'Various Subscriptions', provider: 'Misc', amount: 58.24 + 12.48 + 4.62 + 40.00, contract: 'Cancellable Anytime'},
                { id: 'b8', name: 'Insurance', provider: 'AAMI', amount: 58.25},
                { id: 'b9', name: 'Credit Card Payoff', provider: 'Bank', amount: 115.38}
            ],
            sinking: [
                { id: 's1', name: 'Water', provider: 'Urban Utilities', weekly: 26.67 },
                { id: 's2', name: 'Internet Security', provider: 'Norton', weekly: 3.56 },
                { id: 's3', name: 'Car Licensing', provider: 'TMR', weekly: 6.25 },
                { id: 's4', name: 'Car Rego', provider: 'TMR', weekly: 16.92 },
                { id: 's5', name: 'Car Maintenance', provider: 'General', weekly: 11.54 },
                { id: 's6', name: 'School Costs', provider: 'General', weekly: 30.77 },
                { id: 's7', name: 'Gifts Fund', provider: 'Savings', weekly: 57.69 },
                { id: 's8', name: 'Holiday Fund', provider: 'Savings', weekly: 192.31 },
            ],
        };

        // --- State Management ---
        function saveState() {
            localStorage.setItem('budgetAndBillsState', JSON.stringify(appState));
        }

        function loadState() {
            const savedState = localStorage.getItem('budgetAndBillsState');
            appState = savedState ? JSON.parse(savedState) : JSON.parse(JSON.stringify(initialState));
        }

        // --- Main Render Function ---
        function render() {
            const renderTable = (items, type) => {
                let html = `<div class="space-y-2">`;
                items.forEach(item => {
                    const amount = type === 'bills' ? item.amount : item.weekly;
                    html += `
                    <div class="flex justify-between items-center bg-gray-50 p-3 rounded-lg border">
                        <div>
                            <p class="font-bold text-gray-800">${item.name}</p>
                            <p class="text-xs text-gray-500">${item.provider}</p>
                        </div>
                        <div class="text-right">
                             <p class="font-semibold text-lg text-gray-900">$${amount.toFixed(2)}</p>
                             <button class="text-xs text-blue-600 hover:underline" data-type="${type}" data-id="${item.id}">Edit</button>
                        </div>
                    </div>`;
                });
                html += `</div>`;
                return html;
            };
            billsContainerEl.innerHTML = renderTable(appState.bills, 'bills');
            sinkingFundsContainerEl.innerHTML = renderTable(appState.sinking, 'sinking');
        }

        // --- Modal & Form Logic ---
        function openEditModal(type, id) {
            const item = appState[type].find(i => i.id === id);
            if (!item) return;

            document.getElementById('edit-item-title').textContent = `Edit ${item.name}`;
            document.getElementById('edit-item-id').value = id;
            document.getElementById('edit-item-type').value = type;
            document.getElementById('edit-item-name').value = item.name;
            document.getElementById('edit-item-provider').value = item.provider || '';
            document.getElementById('edit-item-amount').value = type === 'bills' ? item.amount : item.weekly;
            
            const contractStatusEl = document.getElementById('edit-contract-status');
            if(item.contract) {
                contractStatusEl.classList.remove('hidden');
                document.getElementById('edit-item-contract').value = item.contract;
            } else {
                contractStatusEl.classList.add('hidden');
            }
            
            modalEl.classList.add('active');
        }

        function closeEditModal() {
            modalEl.classList.remove('active');
        }

        modalFormEl.addEventListener('submit', (e) => {
            e.preventDefault();
            const id = document.getElementById('edit-item-id').value;
            const type = document.getElementById('edit-item-type').value;
            const item = appState[type].find(i => i.id === id);
            
            item.name = document.getElementById('edit-item-name').value.trim();
            item.provider = document.getElementById('edit-item-provider').value.trim();
            const newAmount = parseFloat(document.getElementById('edit-item-amount').value);
            if (type === 'sinking') {
                item.weekly = newAmount;
            } else {
                item.amount = newAmount;
            }

            if(item.contract) {
                item.contract = document.getElementById('edit-item-contract').value;
            }
            
            closeEditModal();
            render();
            saveState();
        });

        deleteButtonEl.addEventListener('click', () => {
            const id = document.getElementById('edit-item-id').value;
            const type = document.getElementById('edit-item-type').value;
             if (!confirm("Are you sure you want to permanently delete this item?")) return;

            appState[type] = appState[type].filter(item => item.id !== id);
            
            closeEditModal();
            render();
            saveState();
        });

        modalCancelEl.addEventListener('click', closeEditModal);

        // --- Event Delegation for Edit Buttons ---
        document.body.addEventListener('click', e => {
            if (e.target.matches('button[data-type][data-id]')) {
                openEditModal(e.target.dataset.type, e.target.dataset.id);
            }
        });

        // --- Initial Load ---
        loadState();
        render();
    });
    </script>
</body>
</html>
